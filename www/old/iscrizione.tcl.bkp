ad_page_contract {
    @author Mattia Righetti (mattia.righetti@professionefinanza.com)
    @cvs-id processing-delete.tcl
    @param genere_id The id to delete
} {
    evento_id:integer
    return_url
}
#Controllo su utenza.
if {![set user_id [ad_conn user_id]]} {
    ad_script_abort
} 
#Estrae id persona da crm.
set persona_id [db_string query "select persona_id from crm_persone where user_id = :user_id"]
#Estrae id expo.
set expo_id [db_string query "select expo_id from expo_edizioni where data > current_date"]
#Se già iscritto, disiscrive.
if {[db_0or1row query "select * from expo_iscrizioni where persona_id = :persona_id and evento_id = :evento_id limit 1"]} {
    with_catch error_message {
	db_dml query "delete from expo_iscrizioni where persona_id = :persona_id and evento_id = :evento_id"
    } {
	ad_return_complaint 1 "<b>Attenzione!</b> Non è stato possibile eseguire l'operazione desiderata. Si prega di tornare indietro e riprovare ad eseguirla di nuovo. In caso di persistenza, contattare il webmaster a <a href=\"mailto:webmaster@professionefinanza.com\">webmaster@professionefinanza.com</a>.<br>L'errore riportato dal sistema è il seguente.<br><code>$error_message</code>"
    }
    ad_returnredirect -allow_complete_url $return_url
    ad_script_abort
}
#Controllo eventi in parallelo.
set start_time [db_string query "select start_time from expo_eventi where evento_id = :evento_id"]
set end_time [db_string query "select end_time from expo_eventi where evento_id = :evento_id"]
db_foreach query "select e.start_time as start_check, e.end_time as end_check from expo_iscrizioni i, expo_eventi e where e.evento_id = i.evento_id and e.expo_id = :expo_id and persona_id = :persona_id" {
    if {[db_string query "select (:start_time::timestamp, :end_time::timestamp) overlaps (:start_check::timestamp, :end_check::timestamp)"] == t} {
	append return_url "?message=overlap"
	ad_returnredirect -allow_complete_url $return_url
	ad_script_abort
    }
}
#Imposta id iscrizione
set iscrizione_id [db_string query "select max(iscrizione_id) + trunc(random() *99+1) from expo_iscrizioni"]
with_catch error_message {
    db_dml query "insert into expo_iscrizioni (iscrizione_id, persona_id, evento_id, data) values (:iscrizione_id, :persona_id, :evento_id, current_date)"
} {
    ad_return_complaint 1 "<b>Attenzione!</b> Non è stato possibile eseguire l'operazione desiderata. Si prega di tornare indietro e riprovare ad eseguirla di nuovo. In caso di persistenza, contattare il webmaster a <a href=\"mailto:webmaster@professionefinanza.com\">webmaster@professionefinanza.com</a>.<br>L'errore riportato dal sistema è il seguente.<br><code>$error_message</code>"
    return
}
if {[db_0or1row query "select * from expo_eventi where evento_id = :evento_id and prezzo > 0::money"]} {
    if {[db_0or1row query "select * from expo_iscrizioni i, expo_eventi e where e.evento_id = i.evento_id and i.persona_id = :persona_id and e.prezzo > 0::money and confermato = true"]} {
	db_dml query "update expo_iscrizioni set confermato = true where iscrizione_id = :iscrizione_id"
	append return_url "?message=success"
    } else {
	append return_url "?message=pay"
    }
} else {
    append return_url "?message=success"
}
ad_returnredirect -allow_complete_url $return_url
ad_script_abort
